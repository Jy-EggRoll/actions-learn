name: Install PS2EXE and Release

on:  # 仅手动触发
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取所有历史记录

      - name: Install PS2EXE module
        run: |
          Install-Module -Name ps2exe
        shell: pwsh  # 使用 PowerShell 7

      - name: Package ps1 to exe
        run: |
          if (Test-Path -Path "Get-BatteryInfo.ps1") {
              Invoke-ps2exe .\Get-BatteryInfo.ps1 .\Get-BatteryInfo.exe
              echo "EXE_PACKAGE=Get-BatteryInfo.exe" >> $env:GITHUB_ENV
              Write-Host "Successfully created Get-BatteryInfo.exe"
          } else {
              Write-Error "File not found (Get-BatteryInfo.ps1)"
              exit 1
          }
        shell: pwsh  # 使用 PowerShell 7
        
      - name: Generate release notes
        id: release_notes
        run: |
          $currentTag = "${{ steps.current_tag.outputs.current_tag }}"
          $previousTag = "${{ steps.previous_tag.outputs.previous_tag }}"

          try {
              "# 发布详情`n" | Out-File -FilePath release_notes.txt -Encoding utf8
              "`## 变更记录`n" | Out-File -FilePath release_notes.txt -Encoding utf8 -Append

              if (-not $previousTag) {
                  Write-Host "从初始提交到 $currentTag 生成变更记录"
                  $notes = git log "$currentTag" --pretty=format:"- %s (%h) - %cd" --date=format:"%Y-%m-%d %H:%M"
              } else {
                  Write-Host "从 $previousTag 到 $currentTag 生成变更记录"
                  $notes = git log "$previousTag..$currentTag" --pretty=format:"- %s (%h) - %cd" --date=format:"%Y-%m-%d %H:%M"     
              }

              if (-not $notes) {
                  $notes = "- 无明显变更"
              }

              $notes | Out-File -FilePath release_notes.txt -Encoding utf8 -Append
              echo "notes_file=release_notes.txt" >> $env:GITHUB_ENV

              Write-Host "生成的发布说明:"
              Get-Content release_notes.txt
          } catch {
              Write-Error "生成发布说明失败: $_"
              exit 1
          }
        shell: pwsh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.current_tag.outputs.current_tag }}
          name: Release ${{ steps.current_tag.outputs.current_tag }}
          body_path: ${{ env.notes_file }}
          files: ${{ env.EXE_PACKAGE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}